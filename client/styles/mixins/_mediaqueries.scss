/* =======================================*/
/*
/* MEDIAQUERIES
/* 
/* =======================================*/

/* =======================================*/
/* RESPOND AT - use: @include respond-at($name) {...} 
/* =======================================*/
@mixin respond-at($name) {
	$index: index(map_keys($breakpoints), $name);

	@if map-has-key($breakpoints, $name) {
		@if $index == length($breakpoints) {
			@media only screen and (min-width: map-get($breakpoints, $name)) {
				@content;
			}
		} @else {
			@media only screen and (min-width: map-get($breakpoints, $name)) and (max-width: nth(map_values($breakpoints), ( $index + 1 ))) {
				@content;
			}
		}
	}
}

/* =======================================*/
/* RESPOND ABOVE - use: @include respond-above($name) {...} 
/* =======================================*/
@mixin respond-above($name) {
	@if $name != null and map-has-key($breakpoints, $name) {
		@media only screen and (min-width: map-get($breakpoints, $name)) {
			@content;
		}
	}
	// above specific px width
	@else {
		@media only screen and (min-width: $name) {
			@content;
		}
	}
}

/* =======================================*/
/* RESPOND BELOW - use: @include respond-below($name) {...} 
/* =======================================*/
@mixin respond-below($name) {
	@if $name != null and map-has-key($breakpoints, $name) {
		@media only screen and (max-width: map-get($breakpoints, $name)) {
			@content;
		}
	}
	// below specific px width
	@else {
		@media only screen and (max-width: $name) {
			@content;
		}
	}
}

/* =======================================*/
/* RESPOND BETWEEN - use: @include respond-between($name1, $name2) {...} 
/* =======================================*/
@mixin respond-between($name1, $name2) {
	@if map-has-key($breakpoints, $name1) and map-has-key($breakpoints, $name2) {
		@media only screen and (min-width: #{inspect(map-get($breakpoints, $name1))}) and (max-width: #{inspect(map-get($breakpoints, $name2))}) {
			@content;
		}
	}
	// between specific px widths
	@else {
		@media only screen and (min-width: $name1) and (max-width: $name2) {
			@content;
		}
	}
}